name = "Bluetooth disabled on sleep"
description = """\
Disable bluetooth on sleep, and enable it again when waking up. \
Helpful for macOS, which is notorious for draining battery from chatty \
Bluetooth devices."""

[[trigger]]
kind = "power"
events = ["Sleep", "Wake"]

[[condition]]
kind = "shell"
script = "true"

[[execute]]
kind = "shell"
script = """\
set -euo pipefail
sytter-vars
echo \"Power event: '$sytter_power_event' \"
if [[ \"$sytter_power_event\" == \"Sleep\" ]]; then
  # Store the original Bluetooth value so we can put it back when this is done.
  sytter_bluetooth_enabled_at_sleep=\"$(blueutil --power)\"
  sytter-var-write sytter_bluetooth_enabled_at_sleep
  blueutil --power 0
elif [[ \"$sytter_power_event\" == \"Wake\" ]]; then
  sytter_bluetooth_enabled_at_sleep=\"${sytter_bluetooth_enabled_at_sleep:-}\"
  sytter-vars sytter_bluetooth_enabled_at_sleep
  enabled_text=\"$(
    [[ \"$sytter_bluetooth_enabled_at_sleep\" == '1' ]] \
      && printf '%s' 'enabled' \
      || printf '%s' 'disabled'
  )\"
  echo \"Bluetooth was $enabled_text ($sytter_bluetooth_enabled_at_sleep) when sleep started, so it will be $enabled_text now.\"
  # Don't blindly enable Bluetooth - if we had it off before, keep it off now.
  blueutil --power \"$sytter_bluetooth_enabled_at_sleep\"
else
 echo \"Unknown power event '$sytter_power_event'.\"
fi
"""

[[failure]]
kind = "shell"
# Send a local email (with `sendmail`) to tell us about it.
script = """\
printf '%s\n' 'Subject: Bluetooth management on sleep/wake failed' \
       '' \
       'Failed trying to manage Bluetooth during $action! See $LOG for details.' \
| sendmail $USER \
"""
